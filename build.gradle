buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }

    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.7.RELEASE"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.20.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'java'
    id 'war'
    id 'io.spring.dependency-management' version "1.0.6.RELEASE"
}

print(project)

if (project.hasProperty('prod')) {
    apply from: 'gradle/profile_prod.gradle'
} else {
    apply from: 'gradle/profile_dev.gradle'
}

group = 'com.gemeente-utrecht'
sourceCompatibility = '11'

war {
    rootSpec.exclude("**/tomcat-*.jar")
    manifest {
        attributes 'Main-Class': 'com.gemeenteutrecht.processplatform.ProcessPlatformApplication'
    }
}

springBoot {
    mainClassName = 'com.gemeenteutrecht.processplatform.ProcessPlatformApplication'
    buildInfo()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation group: 'org.camunda.bpm.springboot', name: 'camunda-bpm-spring-boot-starter', version: '3.3.3'

    //API
    implementation group: 'org.camunda.bpm.springboot', name: 'camunda-bpm-spring-boot-starter-rest', version: '3.3.3'

    //Cockpit
    implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp:3.3.3"

    //Spin
    implementation group: 'org.camunda.bpm', name: 'camunda-engine-plugin-spin', version: '7.11.0'
    implementation group: 'org.camunda.spin', name: 'camunda-spin-dataformat-json-jackson', version: '1.7.0'

    //Database
    implementation "org.testcontainers:mysql:1.11.3"

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.assertj:assertj-core"
}

if (file('deployment.gradle').exists()) {
    apply from: 'deployment.gradle'
}
